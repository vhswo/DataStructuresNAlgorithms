#include<stdio.h>
#include<stdlib.h>
#include<Windows.h>

//반복문 대신 재귀함수, 이중포인터 x

#define NAME_SIZE 32
#define ADDR_SIZE 128

typedef struct Student
{
	char name[NAME_SIZE];
	int age;
	char address[ADDR_SIZE];
	int Kor;
	int Eng;
	int Math;
	int Sum;
	float Float;
	char Level[32];

	struct Node* link;
}Student;

int Menu();
Student* Insert(Student* tmp);
void OutputList(Student* st);
void List(Student* st);
Student* StudentInformaiton(Student* st, char iInput[32]);
void Search(Student* st);
Student* LastTmp(Student* tmp);
Student* modify(Student* st);
Student* ExFindLink(Student* tmp, Student* st);
Student* Delete(Student* st, char iInput[32]);
Student* Relese(Student* st);




void main()
{

	Student* head = NULL;

	char iInput[NAME_SIZE] = { 0 };
	while (1)
	{
		switch (Menu())
		{
		case 1:
			head = Insert(head);
			break;
		case 2:
			if(head != NULL)
				Search(head);
			break;
		case 3:
			if (head != NULL)
				List(head);
			break;
		case 4:
			if (head != NULL)
				modify(head);
			break;
		case 5:
			if (head != NULL)
			{
				system("cls");
				printf("삭제할 학생의 이름 : ");
				scanf("%s", &iInput);
				head = Delete(head,iInput);
			}
			break;
		case 6:
			if (head != NULL)
				Relese(head);

			return;
		}
	}
}



int Menu()
{
	int iInput;
	system("cls");
	printf("<<<==== 메뉴 ====>>>>\n\n");
	printf("1.학생 등록\n");
	printf("2.학생 검색\n");
	printf("3.학생 목록\n");
	printf("4.학생 수정\n");
	printf("5.학생 삭제\n");
	printf("6.종료\n");
	printf("입력 : ");

	scanf("%d", &iInput);

	return iInput;
}

Student* Insert(Student* st)
{

	Student *add;

	if (st == NULL)
	{
		system("cls");
		add = (Student*)malloc(sizeof(Student));
		printf("학생이름 입력 : ");
		scanf("%s", add->name);
		printf("%s 학생 나이 입력 : ", add->name);
		scanf("%d", &add->age);
		printf("%s 학생 주소 입력 : ", add->name);
		scanf("%s", add->address);
		printf("%s 학생 국어 입력 : ", add->name);
		scanf("%d", &add->Kor);
		printf("%s 학생 영어 입력 : ", add->name);
		scanf("%d", &add->Eng);
		printf("%s 학생 수학 입력 : ", add->name);
		scanf("%d", &add->Math);
		printf("학생정보 입력 완료");
		add->Sum = add->Kor + add->Eng + add->Math;
		add->Float = (float)add->Sum / 3;
		if (add->Float >= 90)
			strcpy(add->Level, "A");
		else if (add->Float >= 80)
			strcpy(add->Level, "B");
		else if (add->Float >= 70)
			strcpy(add->Level, "C");
		else
			strcpy(add->Level, "D");
		system("pause");
		add->link = NULL;

		st = add;

		return st;
	}
	else
	{
		 st->link = Insert(st->link);
		 return st;
			
	}

	
}

void OutputList(Student* st)
{
	if (st != NULL)
	{
		printf("%16s%16d%16s\n", st->name, st->age, st->address);
		OutputList(st->link);
	}
}

void List(Student* st)
{
	system("cls");
	printf("<<==== information ====>>\n\n");
	printf("\t학생이름\t학생나이\t학생주소\n");
	OutputList(st);
	printf("학생 개개인의 점수는 검색을 이용하세요 !!\n");
	system("pause");
}

Student* StudentInformaiton(Student* st, char iInput[32])
{
	system("cls");

	if (st == NULL)
		return st;

	if (strcmp(iInput, st->name) != 0 )
	{
		return StudentInformaiton(st->link, iInput);
	}
	else
	{
		printf("학생 정보 검색 완료\n");
		printf("<<==== information ====>>\n");
		printf("학생 이름 : %s\n", st->name);
		printf("학생 나이 : %d\n", st->age);
		printf("학생 주소 : %s\n", st->address);
		printf("국어 점수 : %d\n", st->Kor);
		printf("영어 점수 : %d\n", st->Eng);
		printf("수학 점수 : %d\n", st->Math);
		printf("합계 점수 : %d\n", st->Sum);
		printf("평균 점수 : %.2f\n", st->Float);
		printf("학생 등급 : %s등급\n", st->Level);

		return st;
	}
}

void Search(Student* st)
{
	
	char iInput[NAME_SIZE];
	printf("검색할 이름 입력 : ");
	scanf("%s", &iInput);
	StudentInformaiton(st, iInput);
	system("pause");

}


Student* modify(Student* st)
{
	Student* tmp = NULL;

	char iInput[NAME_SIZE], iInputaddr[ADDR_SIZE];
	int iInputNum;
	system("cls");
	printf("수정할 이름 입력 : ");
	scanf("%s", &iInput);
	while (1)
	{
		system("cls");
		tmp = StudentInformaiton(st, iInput);

		if (tmp != NULL)
		{
			printf("\n\n\n수정할 항목을 선택하시오\n");
			printf("1.이름\t2.나이\t3.주소\t4.점수\t5.수정종료\n");
			printf("선택 : ");
			scanf("%d", &iInputNum);
			switch (iInputNum)
			{
			case 1:

				printf("현재 이름 : %s\n", tmp->name);
				printf("수정할 이름 : ");
				scanf("%s", iInput);
				printf("%s->", tmp->name);
				strcpy(tmp->name, iInput);
				printf("%s 로 이름수정 완료\n", tmp->name);
				break;
			case 2:
				printf("현재 나이 : %d\n", tmp->age);
				printf("수정할 나이 : ");
				scanf("%d", &iInputNum);
				printf("%d 세 -> ", tmp->age);
				tmp->age = iInputNum;
				printf("%d 세 로 나이수정완료\n", tmp->age);
				break;
			case 3:
				printf("현재 주소 : %s\n수정할 주소 : ", tmp->address);
				scanf("%s", iInputaddr);
				printf("%s -> ", tmp->address);
				strcpy(tmp->address, iInputaddr);
				printf("%s 로 주소 수정 완료\n", tmp->address);
				break;
			case 4:
				printf("현재 점수\n국어 : %d, 영어 : %d, 수학 : %d\n수정할 국어 점수 : ", tmp->Kor, tmp->Eng, tmp->Math);
				scanf("%d", &iInputNum);
				tmp->Kor = iInputNum;
				printf("수정할 영어 점수 : ");
				scanf("%d", &iInputNum);
				tmp->Eng = iInputNum;
				printf("수정할 수학 점수 : ");
				scanf("%d", &iInputNum);
				tmp->Math = iInputNum;
				printf("점수 수정 완료\n");
				break;
			case 5:
				return tmp = LastTmp(tmp);
			}
		}
		else
			return tmp;
		system("pause");

	}
}

Student* LastTmp(Student* tmp)
{
	if (tmp != NULL)
	{
		LastTmp(tmp->link);
		return tmp;
	}
}

Student* Delete(Student* st, char iInput[NAME_SIZE])
{
	Student *tmp = st;

	if (strcmp(iInput, st->name) == 0)
	{
		st = tmp->link;
		free(tmp);
		printf("학생삭제 완료");
		system("pause");
		return st;
	}
	else
	{
			st->link = Delete(st->link, iInput);
			return st;
	}
}

Student* Relese(Student* st)
{
	Student* tmp = st;
	if (st != NULL)
	{
		st = tmp->link;
		free(tmp);
		 Relese(st->link);
	}
}