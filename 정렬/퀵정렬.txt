#include<stdio.h>
#include<time.h>
#include<stdlib.h>

#define MAXNUM 10
#define SORT 2
#define LOW 3
#define LEFT 1
#define RIGHT 1

int iMenu()
{
	int iMenu;
	printf("1. 번호 생성\n");
	printf("2. 오름차순 정렬\n");
	printf("3. 내림차순 정렬\n");
	printf("4.종료\n");
	printf("선택 : ");
	scanf("%d", &iMenu);
	return iMenu;
}

void PrintNum(int RandNum[MAXNUM])
{
	for (int i = 0; i <= MAXNUM - 1; i++)
	{
		printf("%d 번수 : %d\n", i, RandNum[i]);
	}
	system("pause");
	system("cls");
}

void RandTenNum(int RandNum[MAXNUM])
{
	for (int i = 0; i <= MAXNUM - 1; i++)
	{
		RandNum[i] = rand() % 100 + 1;
	}
	PrintNum(RandNum);
}

void SortOrLow_Num(int* RandNum, int Start, int End, int Num)
{
	int tmp;
	int iPivot = End;
	int i = Start, j = End-1;
	if (Start>=End)
		return;

	while (i<=j)
	{
		while ((Num == SORT && i < End && !(RandNum[i] > RandNum[iPivot])) || (Num == LOW && i < End && !(RandNum[i] < RandNum[iPivot])))
		{
			i++;
		}

		while ((Num == SORT && j >= Start && !(RandNum[j] < RandNum[iPivot])) || (Num == LOW && j >= Start && !(RandNum[j] > RandNum[iPivot])))
		{
			j--;
		}

		if (i > j)
		{
			tmp = RandNum[i];
			RandNum[i] = RandNum[iPivot];
			RandNum[iPivot] = tmp;
		}
		else
		{
			tmp = RandNum[i];
			RandNum[i] = RandNum[j];
			RandNum[j] = tmp;
		}

	
	}
	SortOrLow_Num(RandNum, Start, i - LEFT, Num);
	SortOrLow_Num(RandNum, i + RIGHT, End, Num);
	
}

void main()
{
	int RandNum[MAXNUM] = { 0 };

	srand((unsigned)time(NULL));

	while (1)
	{
		switch (iMenu())
		{
		case 1:
			RandTenNum(RandNum);
			break;
		case 2:
			SortOrLow_Num(RandNum, 0, MAXNUM - 1, SORT);
			PrintNum(RandNum);
			break;
		case 3:
			SortOrLow_Num(RandNum, 0, MAXNUM - 1, LOW);
			PrintNum(RandNum);
			break;
		case 4:
			return;
		}
	}

}